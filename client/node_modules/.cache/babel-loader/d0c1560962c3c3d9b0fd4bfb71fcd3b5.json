{"ast":null,"code":"var _jsxFileName = \"/Users/opoliarenk/Desktop/usof-front-end/react-usof-app/src/components/Users.js\";\nimport '../style/Auth.css';\nimport React from 'react';\nimport axios from \"axios\"; // import {render} from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  // const getUsers = async () => {\n  //     const users = axios.get('http://localhost:3000/api/users');\n  //\n  //     return users;\n  // }\n  //\n  // const users = getUsers();\n  function ListItem(props) {\n    // Вірно! Тут не потрібно визначати ключ:\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  function NumberList(props) {\n    const numbers = props.numbers;\n    const listItems = numbers.map(number =>\n    /*#__PURE__*/\n    // Вірно! Ключ потрібно визначати всередині масиву:\n    _jsxDEV(ListItem, {\n      value: number\n    }, number.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  const numbers = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NumberList, {\n          numbers: numbers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/opoliarenk/Desktop/usof-front-end/react-usof-app/src/components/Users.js"],"names":["React","axios","Users","ListItem","props","value","NumberList","numbers","listItems","map","number","toString"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,wBAAO;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,WAASC,UAAT,CAAoBF,KAApB,EAA2B;AACvB,UAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB;AACA,UAAMC,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAaC,MAAD;AAAA;AAC1B;AACA,YAAC,QAAD;AAAkC,MAAA,KAAK,EAAEA;AAAzC,OAAeA,MAAM,CAACC,QAAP,EAAf;AAAA;AAAA;AAAA;AAAA,YAFc,CAAlB;AAIA,wBACI;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,QAAMD,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA3CD;;KAAML,K;AA6CN,eAAeA,KAAf","sourcesContent":["import '../style/Auth.css'\nimport React from 'react';\nimport axios from \"axios\";\n// import {render} from \"@testing-library/react\";\n\nconst Users = () => {\n    // const getUsers = async () => {\n    //     const users = axios.get('http://localhost:3000/api/users');\n    //\n    //     return users;\n    // }\n    //\n    // const users = getUsers();\n\n\n    function ListItem(props) {\n        // Вірно! Тут не потрібно визначати ключ:\n        return <li>{props.value}</li>;\n    }\n\n    function NumberList(props) {\n        const numbers = props.numbers;\n        const listItems = numbers.map((number) =>\n            // Вірно! Ключ потрібно визначати всередині масиву:\n            <ListItem key={number.toString()} value={number} />\n        );\n        return (\n            <ul>\n                {listItems}\n            </ul>\n        );\n    }\n\n    const numbers = [1, 2, 3, 4, 5];\n    \n\n    return (\n        <div className=\"users\">\n            <div className=\"centered\">\n                <p>Users</p>\n                <div>\n                    <NumberList numbers={numbers} />\n                    {/*<button>{users}</button>*/}\n                    {/*{users.map(person => <button>{person.fullName}</button>)}*/}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}